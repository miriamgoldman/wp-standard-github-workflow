{"version":3,"file":"filters.js","mappings":"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","sources":["webpack://mag-blocks/./src/filters/paletteSelector.jsx","webpack://mag-blocks/external window \"React\"","webpack://mag-blocks/external window [\"wp\",\"blockEditor\"]","webpack://mag-blocks/external window [\"wp\",\"components\"]","webpack://mag-blocks/external window [\"wp\",\"compose\"]","webpack://mag-blocks/external window [\"wp\",\"element\"]","webpack://mag-blocks/external window [\"wp\",\"hooks\"]","webpack://mag-blocks/webpack/bootstrap","webpack://mag-blocks/webpack/runtime/compat get default export","webpack://mag-blocks/webpack/runtime/define property getters","webpack://mag-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://mag-blocks/webpack/runtime/make namespace object","webpack://mag-blocks/./src/filters/index.js"],"sourcesContent":["import { addFilter } from '@wordpress/hooks';\nimport { InspectorControls, useBlockProps } from '@wordpress/block-editor';\nimport { PanelBody, ColorPalette } from '@wordpress/components';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport { cloneElement } from '@wordpress/element';\n\nconst colors = [\n    { name: 'Bright Green', color: '#00bf7d', slug: 'bright-green' },\n    { name: 'Vibrant Cyan', color: '#00b4c5', slug: 'vibrant-cyan' },\n    { name: 'Deep Blue', color: '#0073e6', slug: 'deep-blue' },\n    { name: 'Rich Indigo', color: '#2546f0', slug: 'rich-indigo' },\n    { name: 'Deep Purple', color: '#5928ed', slug: 'deep-purple' },\n];\n\naddFilter(\n    'blocks.registerBlockType',\n    'mag-blocks/add-color-picker',\n    (settings, name) => {\n        if (name === 'core/pullquote') {\n            settings.attributes = {\n                ...settings.attributes,\n                bracketColor: {\n                    type: 'string',\n                    default: '#000000',\n                },\n            };\n\n        }\n\n        return settings;\n    }\n);\n\nconst withInspectorControls = createHigherOrderComponent( ( BlockEdit ) => {\n    return ( props ) => {\n        if ( 'core/pullquote' !== props.name ) {\n\t\t\treturn <BlockEdit { ...props } />;\n\t\t}\n\n        const { attributes, setAttributes } = props;\n        const { bracketColor } = attributes;\n\n        return (\n            <>\n    \t\t<BlockEdit { ...props } />\n            <InspectorControls>\n                <PanelBody title=\"Bracket Color\" initialOpen={true}>\n                    <ColorPalette\n                        colors={colors}\n                        value={bracketColor}\n                        onChange={(color) => setAttributes({ bracketColor: color })\n                    }\n                    />\n                </PanelBody>\n            </InspectorControls>\n          \n             </>\n        );\n    }\n\n}, 'withInspectorControls');\n\naddFilter( 'editor.BlockEdit', 'mag-blocks/add-color-picker', withInspectorControls );\n\naddFilter(\n    'blocks.getSaveElement',\n    'mag-blocks/add-color-picker',\n    ( element, block, attributes ) => {\n        if ( 'core/pullquote' !== block.name ) {\n            return element;\n        }\n\n        const { bracketColor } = attributes;\n        const selectedColor = colors.find(color => color.color === bracketColor);\n        const colorSlug = selectedColor ? selectedColor.slug : 'none';\n        const prefixedColorSlug = `has-bracket-color-${colorSlug}`;\n\n\n\n\n        return cloneElement(\n            element,\n            { className: `${element.props.className} ${prefixedColorSlug}` },\n            cloneElement( element.props.children, {})\n        );\n\n    }\n);","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"hooks\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './paletteSelector.jsx';\n"],"names":["addFilter","InspectorControls","useBlockProps","PanelBody","ColorPalette","createHigherOrderComponent","cloneElement","colors","name","color","slug","settings","attributes","bracketColor","type","default","withInspectorControls","BlockEdit","props","createElement","setAttributes","Fragment","title","initialOpen","value","onChange","element","block","selectedColor","find","colorSlug","prefixedColorSlug","className","children"],"sourceRoot":""}